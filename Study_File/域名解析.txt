DNS 域名解析系统

首先DNS 是运用在TCP/IP 协议族上的，网络上各台主机要完成通信（即数据交换），首先得互相知道
彼此的地址，这里的地址指的就是 IP地址，通过这个逻辑地址，处于不同子网间的主机 就能够通过云端路由
最后将请求发送到 目的主机，同时目的主机返回应答。

但随之而来的一个问题就是 IP地址的格式为 xxx.xxx.xxx.xxx，大家在浏览网页的时候，大多需要自己输入网址，那么
这个时候，冗长的IP地址很难被记住。

DNS的出现可谓是解决了这个问题
它可以将 容易被大家所记住的 域名 映射成 对应主机的IP地址，这个时候，大家只需要在浏览器中输入域名就可以访问对应的网站了

大致工作流程如下
浏览器在发送一个网页请求前
首先会根据用户输入的域名 映射步骤如下
1.本地的 hosts文件， dns客户端缓存，以及路由器缓存中查找，有结果则完成映射
2.若在本地缓存中没有找到结果，则会去 当前使用网络的提供商 也就是 ISP的DNS缓存中查找，有结果则完成映射
3.若以上都无结果，则需要ISP的DNS服务器会向 根DNS服务器发出请求，请求顶级DNS服务器.com的ip地址
4.之后本地的DNS服务器接收到地址之后会向上一级的DNS服务器请求上上级DNS服务器的地址
5.如此迭代查询，直到查询到目的主机的IP地址为止

其中 DNS客户机向服务器发送的查询请求为递归查询，意思是客户端只发了一次请求，要求服务器最终能给出应答
而 DNS服务器之间则是用迭代查询，即当前服务器无法给出结果是，将能给出答案的服务器地址也就是上一级DNS
服务器的地址返回，如此迭代，直到查询结果出现。

1.java学习
在继承中 静态属性和方法不能被重写，只能被继承，在调用的过程中，是通过静态绑定的，静态成员的调用依据的是对象的静态类型
如Super s = new Sub(); s则会调用父类的静态方法，因为其静态类型是Super。另一方面，重载方法的调用也是静态绑定的，在编译期间
通过方法的参数列表来判断应该调用哪一个方法，此时，由于是编译期间，那么理所当然 参照的参数类型也应该是静态类型